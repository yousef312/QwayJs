{"version":3,"file":"qway.esm.js","sources":["../src/qway.js","../src/qway.js?commonjs-entry"],"sourcesContent":["/**\r\n * Qway.js 3.0.0\r\n *\r\n * Copyright 2018, yousef neji\r\n * Licensed under the MIT license.\r\n */\r\n/**\r\n * @tutorial introduction\r\n * there is so many types of shortcut we offer:\r\n *  - `shortcut` : ordinary known one\r\n *  - `combo` : used mostly in games like cheat code a string you must tap very quickly and once\r\n * you fully tap a function that going to execute at the end resulting in a completed mission\r\n * or something like that\r\n *  - `holdAction` : occurs when you hold a key for a duration resulting in a function that execute \r\n * at the end.\r\n * \r\n * the syntax to bind each type deffers like so:\r\n *  to bind a normal shortcut you must pass a string constraint a keys list seperated by a `+` sign\r\n *  to bind a combo you must pass a string of keys list seperated by `,` comma\r\n *  to bind a holdAction you pass a string in this form ` (key) => (duration) `. the spaces added only for clarity also the parenthese\r\n *  the syntax of a hold action constrained out of a key then `=>` then the duration of holding in milliseconds.\r\n * \r\n * \r\n * Should not that not all shortcut will be allowed some shortcut could be used by default in the used browser\r\n * all thought the system will try to block this default one but some of them may still work like ctrl+t which open\r\n * new tab and other ones.\r\n * \r\n * \r\n * Tricks:\r\n * here is a simple trick, what to do if I just want to stop a default keybinding like (ctrl+r) that does\r\n * the window reload, you can simply assing to this shortcut a enmpty callback like that `qway.bind('ctrl+r')` you don't really\r\n * have to pass a callback as a qway empty optimal generated callback will be there for you.\r\n */\r\n(function(root,Qway){\r\n    'uses strict';\r\n    if(typeof define === 'function' && define.amd) {\r\n\t\tdefine([], build);\r\n\t}else if(typeof module === 'object' && module.exports) {\r\n        module.exports = Qway();\r\n\t}else{\r\n        root.Qway = Qway();\r\n    }\r\n}(this,function(){\r\n\r\n    // fixed bug in version 2.0.0\r\n    // the library stop all my other callbacks to ceratin event such as mousedown event\r\n    // mouse up event\r\n    // and window blur event\r\n\r\n    // for major support those steps must be implimented\r\n    if([].findIndex === undefined)\r\n    {\r\n        Array.prototype['findIndex'] = function(callback){\r\n            var res = -1;\r\n            for (let i = 0; i < this.length; i++) {\r\n                const element = this[i];\r\n                out = callback(element,i,this);\r\n                if(out === true)\r\n                {\r\n                    res = i;\r\n                    break;\r\n                }\r\n            }\r\n            \r\n            return res;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Interface allows to handle setting up shortcut and combo keys for you app game or even\r\n     * website very easily.\r\n     * @author Yousef Neji\r\n     * @param {boolean} duplicates default false, whether more then one callback for the same\r\n     * shortcut allowed or not!\r\n     */\r\n    var qway = function Qway( duplicates = false ){\r\n\r\n        var _this = this;\r\n        \r\n        /**\r\n         * Holds the defined shortcuts list, to add new shortcut use `bind`.\r\n         * @type {Array}\r\n         */\r\n        this.shortcutslist = [];\r\n\r\n        /**\r\n         * Holds the defined combo list, to new combo use `bind`.\r\n         * @type {Array}\r\n         */\r\n        this.combo = [];\r\n\r\n        /**\r\n         * Holds the callback to be executing when pressing certain key for a given duration\r\n         * @type {Array}\r\n         */\r\n        this.holdingActions = [];\r\n\r\n        /**\r\n         * Flag determine whether assinging more then one callback to the same shortcut\r\n         * is allowed or not\r\n         * @type {boolean}\r\n         */\r\n        this.duplicates = duplicates;\r\n\r\n        /**\r\n         * Holds the different allowed keys to form the sortcut\r\n         * @type {Array}\r\n         */\r\n        this.KEYS = ['command'/*For Mac OS*/,'ctrl','shift','alt','altGraph','capslock','tab','backspace','enter','meta',\r\n            'space','escape','pageup','pagedown','home','insert','delete','end','arrowup','arrowdown','arrowleft',\r\n            \"arrowright\",'1','2','3','4','5','6','7','8','9','0','a','b','c','d','e','f','g','h','i','j','k','l','m',\r\n            'n','o','p','q','r','s','t','u','v','w','x','y','z','*','f1','f2','f3','f4','f5','f6','f7','f8','f9','f10','f11'];\r\n            \r\n        \r\n        /**\r\n         * Get or set shortcut activation state\r\n         * @type {boolean}\r\n         */\r\n        this.shortcutActivated = true;\r\n\r\n        /**\r\n         * Get or set combo activation state\r\n         * @type {boolean}\r\n         */\r\n        this.comboActivated = true;\r\n\r\n        /**\r\n         * Flag determine whether the user currently in interactive mode or not,\r\n         * must not get changed!\r\n         * @readonly\r\n         * @type {boolean}\r\n         */\r\n        this.intercativeMode = false;\r\n\r\n        /**\r\n         * Used in the interactive mode to hold the shortcut that going to be builded\r\n         * @type {Array<Array>}\r\n         */\r\n        this.toBuild = [[],[]];\r\n        \r\n        /**\r\n         * QEF or Qway Escape Function is the rescue function when ever a shortcut was created without it callback.\r\n         * @readonly\r\n         * @type {function}\r\n         */\r\n        this.QEF = function(){};\r\n\r\n        /**\r\n         * Holds the keys states whether they are pressed or not.\r\n         * @readonly\r\n         */\r\n        this.keysuite = {};\r\n\r\n        // packing up\r\n        window.addEventListener('keydown',function(e){\r\n            _this.handleKeydown.call(_this,e)\r\n        });\r\n        window.addEventListener('keyup',function(e){\r\n            _this.handleKeyup.call(_this,e)\r\n        });\r\n        window.addEventListener('blur',function(){\r\n            _this.blur.call(_this);\r\n        })\r\n    }\r\n\r\n    qway.prototype = {\r\n        /**\r\n         * Approve binding the user created shortcut in interactive mode.\r\n         * @method Qway#applyReplace\r\n         * @returns {string} the shortcut that currently was approved.\r\n         */\r\n        approve : function(){\r\n            if(this.toBuild[0].length === 0) return;\r\n            \r\n            var shortcut = this.toBuild[0].join('+');\r\n            var callback = this.toBuild[1][1];\r\n\r\n            this.bind(shortcut,callback);\r\n\r\n            this.toBuild = [[],[]];\r\n            return shortcut;\r\n        },\r\n        /**\r\n         * Approve replacing the given `callback` shortcut by the user defined one.\r\n         * @method Qway#approveToReplace\r\n         * @returns {boolean} true if replacing went well or false otherwise.\r\n         */\r\n        approveToReplace : function(){\r\n            if(this.toBuild[0].length === 0) return;\r\n\r\n            var shortcut = this.toBuild[0];\r\n            var callback = this.toBuild[1][1];\r\n\r\n            var obj = this.shortcutslist.find((a)=> a.callback.toString() === callback.toString());\r\n            let exist = this.check(shortcut.join('+')) !== -1;\r\n\r\n            if(obj !== undefined && !exist)\r\n            {\r\n                this.unbind(obj.shortcut.join('+'),obj.callback);\r\n                var res = this.bind(shortcut.join('+'),this.toBuild[1][1]);\r\n\r\n                this.toBuild = [[],[]];\r\n                this.intercativeMode = false;\r\n                return res === false ? res : shortcut;\r\n            }\r\n            this.toBuild = [[],[]];\r\n            this.intercativeMode = false;\r\n            return false;\r\n\r\n        },\r\n        /**\r\n         * Abort the interactive process emptying the system from the temporary saved \r\n         * user interaction data(shortcut), invoked internally by the system.\r\n         * @method Qway#abort\r\n         */\r\n        abort : function(){\r\n            this.intercativeMode = false;\r\n            this.toBuild = [[],[]];\r\n        },\r\n        /**\r\n         * Reset the progress of the combo with the given string and callback.\r\n         * @method Qway#resetCombo\r\n         * @param {string} combo \r\n         * @param {function} callback (optional)\r\n         */\r\n        resetCombo : function(combo,callback){\r\n            combo = this.supervise(combo).join(',');\r\n\r\n            var index = this.combo.findIndex(a=> a.combo.join(',') === combo && (callback === undefined || (callback !== undefined && a.callback.toString() === callback.toString())));\r\n            \r\n            if(index !== -1)\r\n            {\r\n                this.combo[index].progress = '';\r\n                this.combo[index].done = false;\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        /**\r\n         * Toggle the activation state of a combo with the given string and callback\r\n         * @method Qway#toggleCombo\r\n         * @param {string} combo \r\n         * @param {function} callback (optional)\r\n         * @param {boolean} state (optional) if you want to force true or false\r\n         * @returns {boolean} true if toggling went well or false otherwise\r\n         */\r\n        toggleCombo : function(combo,callback,state){\r\n            combo = this.supervise(combo).join(',');\r\n\r\n            var index = this.combo.findIndex(a=> a.combo.join(',') === combo && (callback === undefined || (callback !== undefined && a.callback.toString() === callback.toString())));\r\n            \r\n            if(index !== -1)\r\n            {\r\n                if(typeof state === 'boolean')\r\n                {\r\n                    this.combo[index].active = state;\r\n                }\r\n                else\r\n                {\r\n                    this.combo[index].active = !this.combo[index].active;\r\n                }\r\n                \r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        /**\r\n         * Toggle the activation state of a shortcut with the given string and callback\r\n         * @method Qway#toggleCombo\r\n         * @param {string} combo \r\n         * @param {function} callback (optional)\r\n         * @param {boolean} state (optional) if you want to force true or false\r\n         * @returns {boolean} true if toggling went well or false otherwise\r\n         */\r\n        toggleShortcut : function(shortcut,callback,state){\r\n            shortcut = this.supervise(shortcut).join('+');\r\n\r\n            var index = this.shortcutslist.findIndex(a=> a.shortcut.join('+') === shortcut && (callback === undefined || (callback !== undefined && callback.toString() === a.callback.toString())));\r\n            \r\n            if(index !== -1)\r\n            {\r\n                if(typeof state === 'boolean')\r\n                {\r\n                    this.shortcutslist[index].active = state;\r\n                }\r\n                else\r\n                {\r\n                    this.shortcutslist[index].active = !this.shortcutslist[index].active;\r\n                }\r\n                \r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        /**\r\n         * Replace the shortcut of the given callback to new one\r\n         * @method Qway#replace\r\n         * @param {function} callback \r\n         * @param {string} shortcut \r\n         * @returns {boolean}  true if shortcut replaced successfully or false otherwise\r\n         */\r\n        replace : function(callback,shortcut){\r\n            var index = this.shortcutslist.find((a)=> a.callback !== undefined && a.callback.toString() === callback.toString());\r\n\r\n            if(index !== undefined)\r\n            {\r\n                this.unbind(index.shortcut.join('+'),index.callback);\r\n                return this.bind(shortcut,callback);\r\n            }\r\n            return false\r\n        },\r\n        /**\r\n         * Interactivly getting the shortcut through the user clicks, this is usefull when\r\n         * designing the settings of your app, allowing the user to set up his own shortcut.\r\n         * @method Qway#getFromUser\r\n         * @param {number} shortcutLength the shortcut accepeted key count\r\n         * @param {function} callback \r\n         * @param {function} func1 this function will be excuted each time the user press or release\r\n         * a key while in creating the shortcut, it helps keep supervising the events!\r\n         */\r\n        getFromUser : function(shortcutLength,callback,func1){\r\n            this.intercativeMode = true;\r\n            this.toBuild[1].push(shortcutLength,callback,func1);\r\n        },\r\n        /**\r\n         * Stop the interactive mode, getting the shortcut from the user\r\n         * @method Qway#stopGettingFromUser\r\n         */\r\n        stopGettingFromUser : function(){\r\n            this.intercativeMode = false;\r\n            this.toBuild = [[],[]];\r\n        },\r\n        /**\r\n         * Invoked internally to cancel a shortcut\r\n         * @method Qway#handleKeyup\r\n         * @param {KeyboardEvent} e \r\n         */\r\n        handleKeyup : function(e){\r\n            var key = e.key.toLowerCase();\r\n            key = key === ' ' ? 'space' : key.trim();\r\n            key = key === 'control' ? 'ctrl' : key;\r\n            this.keysuite[key] = false;\r\n\r\n            if(this.intercativeMode === false)\r\n            {\r\n                if(this.shortcutslist.length !== 0)\r\n                {\r\n                    if(this.shortcutActivated === false) return;\r\n                    \r\n                    this.shortcutslist.forEach((item)=>{\r\n                        \r\n                        if(item.shortcut.indexOf(key) !== -1)\r\n                        {\r\n                            var start = item.shortcut.indexOf(key);\r\n                            \r\n                            for (let i = start; i < item.shortcut.length; i++) {\r\n                                item.progress[i] = false;\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    if(this.holdingActions.length !== 0)\r\n                    {\r\n                        this.holdingActions.forEach(item=>{\r\n                            if(item.key === key && item.timeout !== null)\r\n                            {\r\n                                clearTimeout(item.timeout);\r\n                                item.timeout = null;\r\n                            }\r\n                        })\r\n                    }\r\n                    \r\n                    \r\n                }\r\n                \r\n                \r\n                if( this.combo.length !== 0 && this.comboActivated === true)\r\n                {\r\n                    // this is a figure for the content of the combo arrau to help visualize\r\n                    // what happenings\r\n                    //var obj = {\r\n                    //    progress : '',\r\n                    //    combo : combo,\r\n                    //    callback : callback,\r\n                    //    timing : timing,\r\n                    //    timeout : null,\r\n                    //    active : true\r\n                    //}\r\n\r\n                    this.combo.forEach((item,j)=>{\r\n                        \r\n                        if( item.combo.indexOf(key) !== -1 && !item.done && item.active === true)\r\n                        {\r\n                            e.preventDefault();\r\n\r\n                            // first we increase the progress by the new `key`\r\n                            item.progress += key;\r\n\r\n                            // we clear the old execution timeout\r\n                            if(item.timeout !== null)\r\n                            {\r\n                                clearTimeout(item.timeout);\r\n                            }\r\n\r\n                            if(item.progress === item.combo.join(''))\r\n                            {\r\n                                // means we get the right string\r\n                                item.done = true;\r\n                            }\r\n\r\n                            // now we execute the function \r\n                            item.callback(item);\r\n                            \r\n                            if(!item.done)\r\n                            {\r\n                                item.timeout = setTimeout(function(){\r\n                                    item.progress = '';\r\n                                    item.callback(item);\r\n                                },item.timing);\r\n                            }\r\n                            \r\n                            \r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            else\r\n            {\r\n                // the interactive mode\r\n\r\n                var index = this.toBuild[0].findIndex((a)=> a === key);\r\n                if(index !== -1)\r\n                {\r\n                    e.preventDefault();\r\n                    this.toBuild[0].splice(index,1);\r\n                    this.toBuild[1][2](this.toBuild[0]);\r\n                }\r\n\r\n            }\r\n        },\r\n        /**\r\n         * Invoked internally by the library while performing the shortcut\r\n         * @method Qway#handleKeydown\r\n         * @param {KeyboardEvent} e \r\n         */\r\n        handleKeydown : function(e){\r\n            var key = e.key.toLowerCase();\r\n            key = key === ' ' ? 'space' : key.trim();\r\n            key = key === 'control' ? 'ctrl' : key;\r\n            this.keysuite[key] = true;\r\n            \r\n            if(this.intercativeMode === false)\r\n            {\r\n                if(this.shortcutslist.length !== 0 && this.shortcutActivated === true)\r\n                {\r\n                    this.shortcutslist.forEach(item=>{\r\n                        if(item.active === false) return;\r\n\r\n                        if(item.shortcut[0] === '*')\r\n                        {\r\n                            e.preventDefault();\r\n                            item.progress[0] = true;\r\n                        }\r\n                        else if(item.progress.indexOf(true) !== -1 && \r\n                        item.shortcut[item.progress.lastIndexOf(true) + 1] == '*')\r\n                        {\r\n                            e.preventDefault();\r\n                            item.progress[item.progress.lastIndexOf(true)+1] = true;\r\n                        }\r\n                        \r\n                        //otherwise\r\n                        if(item.shortcut.indexOf(key) !== -1)\r\n                        {\r\n                            e.preventDefault();\r\n                            if(item.progress[item.shortcut.indexOf(key)-1] === true || \r\n                            item.progress[item.shortcut.indexOf(key) - 1] === undefined)\r\n                            {\r\n                                item.progress[item.shortcut.indexOf(key)] = true;\r\n                            }\r\n                        }\r\n\r\n                        if(item.progress[item.progress.length - 1] === true)\r\n                        {\r\n                            e.preventDefault();\r\n                            item.progress[item.progress.length - 1] = false\r\n                            item.callback();\r\n                        }\r\n                    });\r\n                }\r\n\r\n                if(this.holdingActions.length !== 0 && this.shortcutActivated === true)\r\n                {\r\n                    for (let i = 0; i < this.holdingActions.length; i++) {\r\n                        const element = this.holdingActions[i];\r\n                        \r\n                        if(key === element.key && element.timeout === null)\r\n                        {\r\n                            e.preventDefault();\r\n                            this.holdingActions[i].timeout = setTimeout(element.callback,element.duration);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if(this.intercativeMode === true)\r\n            {\r\n                // first we check if key is already in the shortcut or not\r\n                var alreadyThere = this.toBuild[0].findIndex((a)=> a === key);\r\n                if(alreadyThere === -1)\r\n                {\r\n                    e.preventDefault();\r\n                    // now we need to handle creating the shortcut through the user clicks\r\n                    this.toBuild[0].push(key);\r\n                    this.toBuild[1][2](this.toBuild[0]);\r\n\r\n                    if(this.toBuild[0].length === this.toBuild[1][0])\r\n                    {\r\n                        // means if shortcut length is enough\r\n                        // then stop enlarging it and record it\r\n                        this.intercativeMode = false;\r\n                        this.toBuild[1][2](this.toBuild[0],true);\r\n                    }\r\n                }\r\n                \r\n            }\r\n        },\r\n        /**\r\n         * Bind new short cut with a callback, mainly use comma seperated list of keys to create a combo or \r\n         * seperated with `+` sign for ordinary shortcut.\r\n         * @method Qway#bind\r\n         * @param {string} shortcut the shortcut to bind\r\n         * @param {function} callback the callback to be excuted when shortcut performed, if none was passed then a default callback will be assigned\r\n         * @param {number} timing optional parameter defined the minimum time between key presses\r\n         * so the shortcut is performed!(only for combos)\r\n         */\r\n        bind : function( shortcut = 'ctrl+q' , callback , timing=500){\r\n            //do the check\r\n            if(typeof shortcut !== 'string')\r\n            {\r\n                console.warn('Qway warn you:\\nthe given shortcut not string!');\r\n                return;\r\n            }\r\n            callback = typeof callback !== 'function' ? this.QEF : callback;\r\n            timing = typeof timing !== 'number' ? 500 : timing;\r\n            \r\n            //take apart the shortcut and anlyse it \r\n            if(this.KEYS.indexOf(shortcut) !== -1)\r\n            {\r\n                // means the shortcut is constrained out of one single key\r\n                var obj = {\r\n                    shortcut : [shortcut],\r\n                    progress : [false],\r\n                    callback : callback,\r\n                    active : true\r\n                }\r\n                var index = this.check(shortcut);\r\n                if(index === -1 || this.duplicates)\r\n                {\r\n                    this.shortcutslist.push(obj);   \r\n                    return true    \r\n                }\r\n                return false\r\n            }\r\n            else if(shortcut.indexOf('+') !== -1)\r\n            {\r\n                var shortcuti = this.supervise(shortcut);\r\n                if(shortcut !== false)\r\n                {\r\n                    var obj = {\r\n                        shortcut : shortcuti,\r\n                        progress : new Array(shortcuti.length).fill(false,0,shortcuti.length),\r\n                        callback : callback,\r\n                        active : true\r\n                    };\r\n\r\n                    var index = this.check(shortcuti.join('+'));\r\n                    if(index === -1 || this.duplicates)\r\n                    {\r\n                        this.shortcutslist.push(obj);      \r\n                        return true \r\n                    }\r\n                    return false\r\n                }\r\n                return false\r\n            }\r\n            else if(shortcut.indexOf(',') !== -1)\r\n            {\r\n                var combo = this.supervise(shortcut);\r\n                \r\n                \r\n\r\n                if(combo !== false)\r\n                {\r\n                    var obj = {\r\n                        progress : '',\r\n                        combo : combo,\r\n                        done : false,\r\n                        callback : callback,\r\n                        timing : timing,\r\n                        timeout : null,\r\n                        active : true\r\n                    }\r\n                    var index = this.check(combo.join(','));\r\n                    if(index === -1 || this.duplicates)\r\n                    {\r\n                       this.combo.push(obj);   \r\n                       return true    \r\n                    }\r\n                    return false\r\n                }\r\n                return false;\r\n            }\r\n            else if(shortcut.indexOf('=>') !== -1)\r\n            {\r\n                var shortcuti = this.supervise(shortcut);\r\n                \r\n                if(shortcut !== false)\r\n                {\r\n                    var obj = {\r\n                        key : shortcuti[0],\r\n                        duration : shortcuti[1],\r\n                        callback : callback,\r\n                        timeout : null\r\n                    }\r\n                    var index = this.check(shortcut);\r\n                    if(index === -1 || this.duplicates)\r\n                    {\r\n                        this.holdingActions.push(obj);\r\n                        return true\r\n                    }   \r\n                    return false\r\n                }\r\n                return false\r\n\r\n            }\r\n            else\r\n            {\r\n                return false;\r\n            }\r\n\r\n        },\r\n        /**\r\n         * Remove the shortcut associated to the given `callback`, do not pass any parameter to empty\r\n         * the whole system callback, shortcuts combo and also hold actions.\r\n         * more options : \r\n         *  - pass `,` as the shortcut and `all` as the callback(or undefined) to delete all the combo\r\n         *  - pass `+` as the shortcut and `all` as the callback(or undefined) to delete all the shortcuts\r\n         *  - pass `=>` as the shortcut and `all` as the callback(or undefined) to delete all the holding actions\r\n         * \r\n         * @method Qway#unbind\r\n         * @param {string} shortcut \r\n         * @param {function} callback \r\n         * @returns {boolean} true if shortcut successfully unbinded or false otherwise\r\n         */\r\n        unbind : function( shortcut , callback ){\r\n            \r\n            if(shortcut === undefined)\r\n            {\r\n                // passing undefined will empty the whole system\r\n                // all the defined shortcut holdingActions and combo\r\n                this.shortcutslist = [];\r\n                this.holdingActions = [];\r\n                this.combo = [];\r\n                return;\r\n            }\r\n\r\n            var findANDdeleted = false;\r\n            if(this.KEYS.indexOf(shortcut) !== -1)\r\n            {\r\n                for (let i = this.shortcutslist.length - 1; i > -1; i--) {\r\n                    const element = this.shortcutslist[i];\r\n                    \r\n                    if(((callback !== undefined && element.callback.toString() === callback.toString())\r\n                    || callback === undefined) && element.shortcut.join('') === shortcut)\r\n                    {\r\n                        this.shortcutslist.splice(i,1);\r\n                        findANDdeleted = true;\r\n                    } \r\n                }\r\n            }\r\n            else if(shortcut.indexOf('+') !== -1)\r\n            {\r\n                if(callback === 'all' || callback === undefined && shortcut === '+')\r\n                {\r\n                    this.shortcutslist = [];\r\n                    findANDdeleted = true;\r\n                }\r\n                else\r\n                {\r\n                    shortcut = this.supervise(shortcut).join('+');\r\n\r\n                    for (let i = this.shortcutslist.length - 1; i > -1; i--) {\r\n                        const element = this.shortcutslist[i];\r\n\r\n                        if(element.shortcut.join('+') === shortcut &&\r\n                        ((callback !== undefined &&\r\n                            element.callback.toString() === callback.toString()) || (\r\n                                callback === undefined\r\n                            )))\r\n                        {\r\n                            this.shortcutslist.splice(i,1);\r\n                            findANDdeleted = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if(shortcut.indexOf(',') !== -1)\r\n            {\r\n                if(callback === 'all' || callback === undefined && shortcut === ',')\r\n                {\r\n                    this.combo = [];\r\n                    findANDdeleted = true;\r\n                }\r\n                else\r\n                {\r\n                    shortcut = this.supervise(shortcut).join(',');\r\n\r\n                    for (let i = this.combo.length - 1; i > -1; i--) {\r\n                        const combo = this.combo[i];\r\n                        if(combo.combo.join(',') === shortcut &&\r\n                        (( callback !== undefined && \r\n                            combo.callback.toString() === callback.toString()) ||\r\n                            (\r\n                                callback === undefined\r\n                            )\r\n                        ))\r\n                        {\r\n                           this.combo.splice(i,1);\r\n                            findANDdeleted = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if(shortcut.indexOf('=>') !== -1)\r\n            {\r\n                if(callback === 'all' || callback === undefined && shortcut === '=>')\r\n                {\r\n                    this.holdingActions = [];\r\n                    findANDdeleted = true;\r\n                }\r\n                else\r\n                {\r\n                    shortcut = this.supervise(shortcut);\r\n\r\n                    for (let i = this.holdingActions.length - 1; i > -1; i--) {\r\n                        const action = this.holdingActions[i];\r\n\r\n                        if(action.key === shortcut[0] && action.duration === shortcut[1] &&\r\n                            ((\r\n                                callback !== undefined &&\r\n                                action.callback.toString() === callback.toString()) ||\r\n                            (\r\n                                callback === undefined\r\n                            )\r\n                            ))\r\n                        {\r\n                            this.holdingActions.splice(i,1);\r\n                            findANDdeleted = true;\r\n                        }\r\n                    }    \r\n                }\r\n                \r\n            }\r\n\r\n            return findANDdeleted;\r\n        },\r\n        /**\r\n         * Check whether shortcut/keysmap/holdAction already under use or not!\r\n         * @method Qway#check\r\n         * @param {string} shortcut \r\n         * @returns {number}\r\n         */\r\n        check : function(shortcut){\r\n\r\n            if(shortcut.indexOf('+') !== -1)\r\n            {\r\n                return this.shortcutslist.findIndex((a)=> a !== undefined && a.shortcut.join('+') === shortcut);\r\n            }\r\n            else if(shortcut.indexOf(',') !== -1)\r\n            {\r\n                return this.combo.findIndex((a)=> a !== undefined && a.combo.join(',') === shortcut);\r\n            }\r\n            else if(shortcut.indexOf('=>') !== -1)\r\n            {\r\n                return this.holdingActions.findIndex((a)=> a !== undefined && a.key === shortcut);\r\n            }\r\n            else\r\n            {\r\n                return this.shortcutslist.findIndex((a)=> a !== undefined && a.shortcut[0] === shortcut);\r\n            }\r\n        },\r\n        /**\r\n         * Does check a shortcut whether is proper form and can be used or, a proper form shortcut\r\n         * contains only existing system keys, and only one type of seperator so it's type can be identified\r\n         * which could be:\r\n         *  - `shortcut` : if the keys seperator is `+` sign\r\n         *  - `combo` : if the keys seperator is `,`  comma\r\n         *  - `holdAction` : if the keys seperator is `=>` sign\r\n         * \r\n         * also the function does fix the shortcut in some parts! \r\n         * you don't usually invoke this function as it's used internally.\r\n         * @method Qway#supervise\r\n         * @param {string} shortcut \r\n         * @returns {Array} if shortcut fit the terms then it returned in an array otherwise\r\n         * false is returned! \r\n         */\r\n        supervise : function( shortcut ){\r\n\r\n            if(shortcut.indexOf(',') !== -1 && (shortcut.indexOf('+') !== -1 || shortcut.indexOf('=>') !== -1))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if(shortcut.indexOf('+') !== -1 && (shortcut.indexOf(',') !== -1 || shortcut.indexOf('=>') !== -1))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if(shortcut.indexOf('=>') !== -1 && (shortcut.indexOf('+') !== -1 || shortcut.indexOf(',') !== -1))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            var error = false;\r\n            \r\n            if(shortcut.indexOf('+') !== -1)\r\n            {\r\n                shortcut = shortcut.split('+');\r\n                for (let i = 0; i < shortcut.length; i++) {\r\n\r\n                    if(shortcut[i] === 'control')\r\n                    {\r\n                        shortcut[i] = 'ctrl';\r\n                    }\r\n\r\n                    if(shortcut[i] === ' ')\r\n                    {\r\n                        shortcut[i] = 'space';\r\n                    }\r\n\r\n                    shortcut[i] = shortcut[i].toLowerCase();\r\n\r\n                    if(this.KEYS.indexOf(shortcut[i]) === -1)\r\n                    {\r\n                        error = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                return error ? false : shortcut; \r\n\r\n            }\r\n            else if(shortcut.indexOf(',') !== -1)\r\n            {\r\n                shortcut = shortcut.split(',');\r\n                var res = [];\r\n                for (let i = 0; i < shortcut.length; i++) {\r\n                    var key;\r\n                    \r\n                    key = shortcut[i] === ' ' ? 'space' : shortcut[i].trim().toLowerCase();\r\n                    key = key === 'control' ? 'ctrl' : key;\r\n\r\n                    if(key.indexOf('*') !== -1)\r\n                    {\r\n                        key = key.split('*');\r\n                        times = parseFloat(key[1]);\r\n                        name = key[0].trim();\r\n\r\n                        if(this.KEYS.indexOf(name) === -1)\r\n                        {\r\n                            error = true;\r\n                            break;\r\n                        }\r\n\r\n                        for (let j = 0; j < times; j++) {\r\n                            res.push(name);\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        res.push(key);\r\n                        if(this.KEYS.indexOf(key) === -1)\r\n                        {\r\n                            error = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return error ? false : res;\r\n            }\r\n            else if(shortcut.indexOf('=>') !== -1)\r\n            {\r\n                shortcut = shortcut.split('=>');\r\n                var duration = parseFloat(shortcut[1]);\r\n                var key = shortcut[0];\r\n\r\n                key = key === ' ' ? 'space' : key.trim().toLowerCase();\r\n                key = key === 'control' ? 'ctrl' : key;\r\n                \r\n\r\n                if(this.KEYS.indexOf(key) === -1)\r\n                {\r\n                    return false;\r\n                }\r\n\r\n                return this.KEYS.indexOf(key) === -1 ? false : [key,duration]\r\n            }\r\n            else\r\n            {\r\n                shortcut = shortcut === ' ' ? 'space' : shortcut.trim().toLowerCase();\r\n                shortcut = shortcut === 'control' ? 'ctrl' : shortcut;\r\n                \r\n\r\n                return this.KEYS.indexOf(shortcut) === -1 ? false : {\r\n                    shortcut : shortcut,\r\n                    callback : null\r\n                };\r\n            }\r\n        },\r\n        /**\r\n         * Returns an object that can be easily saved inside a JSON file, this helps saving \r\n         * the user preferences if you are creating an app! \r\n         * \r\n         * also the function `initiate` suppose to take as parameter the return of this function\r\n         * as to load back the state.\r\n         * @method Qway#pack\r\n         * @returns {object}\r\n         */\r\n        pack : function(){\r\n            return {\r\n                duplicates : this.duplicates,\r\n                shortcut : this.shortcutslist,\r\n                holdingActions : this.holdingActions,\r\n                shortcutActivated : this.shortcutActivated,\r\n                comboActivated : this.comboActivated,\r\n                combo : this.combo\r\n            }\r\n        },\r\n        /**\r\n         * Load the shortcut list and the combo and all preferences from an object, usually this \r\n         * object is parsed from a JSON file, as to save and load back the state.\r\n         * @method Qway#initiate\r\n         * @param {object} obj \r\n         */\r\n        initiate : function(obj){\r\n            this.duplicates = obj.duplicates || false;\r\n            this.shortcutslist = obj.shortcut || [];\r\n            this.combo = obj.combo || [];\r\n            this.holdingActions = obj.holdingActions || [];\r\n            this.comboActivated = obj.comboActivated || true;\r\n            this.shortcutActivated = obj.shortcutActivated || true;\r\n        },\r\n        /**\r\n         * Used to handle window blur event, invoked internally by the system\r\n         * @method Qway#blur\r\n         */\r\n        blur : function(){\r\n            for (let i = 0; i < this.shortcutslist.length; i++) {\r\n                this.shortcutslist[i].progress.fill(false,0,this.shortcutslist[i].progress.length);\r\n            }\r\n            for (let i = 0; i < this.combo.length; i++) {\r\n                this.combo[i].progress = '';\r\n            }\r\n            for (let i = 0; i < this.holdingActions.length; i++) {\r\n                if(this.holdingActions[i].timeout !== null)\r\n                {\r\n                    clearTimeout(this.holdingActions[i].timeout);\r\n                    this.holdingActions[i].timeout = null;\r\n                }\r\n            }\r\n            \r\n            this.intercativeMode = false;\r\n            this.toBuild = [[],[]];\r\n        }\r\n    }\r\n    \r\n    return qway;\r\n}))\r\n","import { getDefaultExportFromCjs } from \"\u0000commonjsHelpers.js\";\nimport { __require as requireQway } from \"C:\\\\Users\\\\a\\\\Desktop\\\\fff\\\\QuiwayJs\\\\src\\\\qway.js\";\nvar qwayExports = requireQway();\nexport { qwayExports as __moduleExports };\nexport default /*@__PURE__*/getDefaultExportFromCjs(qwayExports);"],"names":["this"],"mappings":"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"}